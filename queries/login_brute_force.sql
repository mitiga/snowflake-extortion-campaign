WITH FailedAttempts AS (
  SELECT
    USER_NAME,
    date,
    EVENT_TIMESTAMP,
    CASE WHEN IS_SUCCESS = false THEN 1 ELSE 0 END AS FAILED_ATTEMPT,
    -- Identify a successful attempt following failed attempts
    CASE WHEN IS_SUCCESS = true AND LAG(IS_SUCCESS) OVER (PARTITION BY USER_NAME, date ORDER BY EVENT_TIMESTAMP) = false THEN 1 ELSE 0 END AS SUCCESS_FOLLOWING_FAILURE
  FROM login_history
),
CumulativeFailed AS (
  SELECT
    *,
    SUM(FAILED_ATTEMPT) OVER (PARTITION BY USER_NAME, date ORDER BY EVENT_TIMESTAMP) - SUM(SUCCESS_FOLLOWING_FAILURE) OVER (PARTITION BY USER_NAME, date ORDER BY EVENT_TIMESTAMP) AS CUMULATIVE_FAILED
  FROM FailedAttempts
),
TotalAttempts AS (
  SELECT
    *,
    COUNT(*) OVER (PARTITION BY USER_NAME, date ORDER BY EVENT_TIMESTAMP) AS TOTAL_ATTEMPTS,
    SUM(FAILED_ATTEMPT) OVER (PARTITION BY USER_NAME, date ORDER BY EVENT_TIMESTAMP) - LAG(CUMULATIVE_FAILED, 1, 0) OVER (PARTITION BY USER_NAME, date ORDER BY EVENT_TIMESTAMP) AS TOTAL_SUBSEQUENT_FAILS
  FROM CumulativeFailed
)

SELECT *
FROM TotalAttempts
WHERE TOTAL_SUBSEQUENT_FAILS >= 5
AND SUCCESS_FOLLOWING_FAILURE = 1 
ORDER BY USER_NAME, date, EVENT_TIMESTAMP;